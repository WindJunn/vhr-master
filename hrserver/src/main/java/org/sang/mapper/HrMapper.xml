<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.sang.mapper.HrMapper">
    <resultMap id="BaseResultMap" type="org.sang.bean.Hr">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="phone" property="phone"/>
        <result column="gender" property="gender"/>
        <result column="address" property="address"/>
        <result column="enabled" property="enabled"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="userface" property="userface"/>
        <result column="remark" property="remark"/>
        <result column="departmentId" property="departmentId"/>
        <result column="idCard" property="idCard"/>
        <result column="nationId" property="nationId"/>
        <result column="email" property="email"/>
        <result column="birthday" property="birthday"/>
    </resultMap>
    <resultMap id="lazyLoadRoles" type="org.sang.bean.Hr" extends="BaseResultMap">
        <collection property="roles" ofType="org.sang.bean.Role" select="org.sang.mapper.HrMapper.getRolesByHrId"
                    column="id"></collection>
    </resultMap>
    <resultMap id="eagerLoadRoles" type="org.sang.bean.Hr" extends="BaseResultMap">
        <collection property="roles" ofType="org.sang.bean.Role">
            <id property="id" column="rid"/>
            <result property="name" column="rname"/>
            <result property="nameZh" column="rnameZh"/>
        </collection>
        <collection property="nation" javaType="org.sang.bean.Nation">
            <id property="id" column="nid"/>
            <result property="name" column="nname"/>
        </collection>
        <collection property="department" ofType="org.sang.bean.Department">
            <id property="id" column="did"/>
            <result property="name" column="dname"/>
            <result property="parentId" column="dparentId"/>
            <result property="depPath" column="ddepPath"/>
            <result property="enabled" column="denabled"/>
            <result property="isParent" column="disParent"/>
        </collection>
    </resultMap>
    <select id="loadUserByUsername" resultMap="lazyLoadRoles">
        select * from hr WHERE username=#{username};
    </select>
    <select id="getRolesByHrId" resultType="org.sang.bean.Role">
        SELECT r.* FROM hr_role h,role r where h.rid=r.id AND h.hrid=#{id}
    </select>
    <insert id="hrReg">
        INSERT INTO hr set username=#{username},password=#{password}
    </insert>
    <select id="getHrsByKeywords" resultMap="eagerLoadRoles">
        select h.*,`r`.`id` AS `rid`,`r`.`name` AS `rname`,`r`.`nameZh` AS `rnameZh` ,d.id as did ,d.name as dname,
        n.id as nid, n.name as nname
        from `hr` `h` left join `hr_role` `h_r` on (`h`.`id` = `h_r`.`hrid`) left join `role` `r` on (`h_r`.`rid` = `r`.`id`)
        LEFT JOIN department d on h.departmentId = d.id LEFT JOIN nation n on h.nationId = n.id
        where h.`id` not in(select h_r.`hrid` from hr_role h_r,role r where h_r.`rid`=r.`id` and r.`nameZh`='系统管理员')
        <if test="keywords!='all' and keywords!=''">
            and h.`name` like concat('%',#{keywords},'%')
        </if>
        <if test="nationId!=null and nationId!=''">
            AND h.nationId=#{nationId}
        </if>
        <if test="departmentId!=null and departmentId!=''">
            AND h.departmentId=#{departmentId}
        </if>
        <if test="nameZh!=null and nameZh!=''">
            AND r.nameZh=#{nameZh}
        </if>

        <if test="start!=null and size!=null">
            order by h.id limit #{start},#{size}
        </if>
    </select>
    <select id="getHrById" resultMap="eagerLoadRoles">
        select h.*, d.name as dname,`r`.`id` AS `rid`,`r`.`name` AS `rname`,`r`.`nameZh` AS `rnameZh` from
        `hr` `h` left join `hr_role` `h_r` on (`h`.`id` = `h_r`.`hrid`)
        left join `role` `r` on (`h_r`.`rid` = `r`.`id`) LEFT JOIN department d ON h.departmentId = d.id
        where h.`id`=#{hrId}
    </select>
    <select id="getHrByUsername" resultMap="eagerLoadRoles">
        select h.*, d.name as dname,`r`.`id` AS `rid`,`r`.`name` AS `rname`,`r`.`nameZh` AS `rnameZh`,
         n.id as nid, n.name as nname from
        `hr` `h` left join `hr_role` `h_r` on (`h`.`id` = `h_r`.`hrid`)
        left join `role` `r` on (`h_r`.`rid` = `r`.`id`) LEFT JOIN department d ON h.departmentId = d.id
        LEFT JOIN nation n on h.nationId = n.id
        where h.`username`=#{username}
    </select>
    <update id="updateHr" parameterType="org.sang.bean.Hr">
        update hr
        <set>
            <if test="hr.name != null" >
                name = #{hr.name,jdbcType=VARCHAR},
            </if>
            <if test="hr.phone != null">
                phone = #{hr.phone,jdbcType=CHAR},
            </if>
            <if test="hr.gender != null">
                gender = #{hr.gender,jdbcType=CHAR},
            </if>
            <if test="hr.address != null">
                address = #{hr.address,jdbcType=VARCHAR},
            </if>
            <if test="hr.departmentId != null">
                departmentId = #{hr.departmentId,jdbcType=INTEGER},
            </if>
            <if test="hr.enabled != null">
                enabled = #{hr.enabled,jdbcType=BIT},
            </if>
            <if test="hr.username != null">
                username = #{hr.username,jdbcType=VARCHAR},
            </if>
            <!--
            <if test="hr.password != null">
                password = #{hr.password,jdbcType=VARCHAR},
            </if>-->
            <if test="hr.userface != null">
                userface = #{hr.userface,jdbcType=VARCHAR},
            </if>
            <if test="hr.idCard != null">
                idCard = #{hr.idCard,jdbcType=VARCHAR},
            </if>
            <if test="hr.remark != null">
                remark = #{hr.remark,jdbcType=VARCHAR},
            </if>

            <if test="hr.birthday != null">
                birthday = #{hr.birthday,jdbcType=DATE},
            </if>
            <if test="hr.email != null">
                email = #{hr.email,jdbcType=VARCHAR},
            </if>
            <if test="hr.nationId != null">
                nationId = #{hr.nationId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{hr.id,jdbcType=BIGINT}
    </update>
    <delete id="deleteRoleByHrId" parameterType="Long">
        DELETE FROM hr_role where hrid=#{hrId}
    </delete>
    <insert id="addRolesForHr">
        INSERT INTO hr_role(hrid,rid) VALUES
        <foreach collection="rids" separator="," item="rid">
            (#{hrId},#{rid})
        </foreach>
    </insert>
    <delete id="deleteHr" parameterType="Long">
        DELETE FROM hr WHERE id=#{hrId}
    </delete>
    <delete id="deleteHrs">
        DELETE FROM hr WHERE id IN
        <foreach collection="ids" separator="," open="(" close=")" item="id">
            #{id}
        </foreach>
    </delete>
    <select id="getAllHr" resultType="org.sang.bean.Hr">
        select * from hr
        <if test="currentId!=null">
            WHERE id !=#{currentId}
        </if>
    </select>

    <insert id="addHrs" >
        insert into hr (name,phone,gender,address,departmentId,enabled,username,password,
        userface,idCard,remark,birthday,email,nationId
      )
    values
        <foreach collection="hrs" item="hr" separator=",">
            (#{hr.name,jdbcType=VARCHAR}, #{hr.phone,jdbcType=VARCHAR},#{hr.gender,jdbcType=VARCHAR},
            #{hr.address,jdbcType=VARCHAR},#{hr.departmentId,jdbcType=INTEGER},#{hr.enabled,jdbcType=BIT},
            #{hr.username,jdbcType=VARCHAR},#{hr.password,jdbcType=VARCHAR},
            #{hr.userface,jdbcType=VARCHAR},
            #{hr.idCard,jdbcType=VARCHAR},#{hr.remark,jdbcType=VARCHAR},#{hr.birthday,jdbcType=DATE},
            #{hr.email,jdbcType=VARCHAR}, #{hr.nationId,jdbcType=INTEGER}
            )
        </foreach>


    </insert>

    <insert id="addHr" parameterType="org.sang.bean.Hr">
        INSERT INTO hr(name,phone,gender,address,departmentId,enabled,username,password,
        userface,idCard,remark,birthday,email,nationId)
        values (
              #{hr.name},
             #{hr.phone},
             #{hr.gender},
             #{hr.address},
              #{hr.departmentId},
             #{hr.enabled},
              #{hr.username},
              #{hr.password},
             #{hr.userface},
             #{hr.idCard},
             #{hr.remark},
              #{hr.birthday},
            #{hr.email},
         #{hr.nationId}
        )
    </insert>

    <update id="updateHreg" parameterType="org.sang.bean.Hr">
        update hr
        <set>
            <if test="hr.name != null">
                name = #{hr.name,jdbcType=VARCHAR},
            </if>
            <if test="hr.phone != null">
                phone = #{hr.phone,jdbcType=CHAR},
            </if>
            <if test="hr.gender != null">
                gender = #{hr.gender,jdbcType=CHAR},
            </if>
            <if test="hr.address != null">
                address = #{hr.address,jdbcType=VARCHAR},
            </if>
            <if test="hr.departmentId != null">
                departmentId = #{hr.departmentId,jdbcType=INTEGER},
            </if>

            <if test="hr.userface != null">
                userface = #{hr.userface,jdbcType=VARCHAR},
            </if>
            <if test="hr.idCard != null">
                idCard = #{hr.idCard,jdbcType=VARCHAR},
            </if>
            <if test="hr.remark != null">
                remark = #{hr.remark,jdbcType=VARCHAR},
            </if>

            <if test="hr.birthday != null">
                birthday = #{hr.birthday,jdbcType=DATE},
            </if>
            <if test="hr.email != null">
                email = #{hr.email,jdbcType=VARCHAR},
            </if>
            <if test="hr.nationId != null">
                nationId = #{hr.nationId,jdbcType=INTEGER},
            </if>
        </set>
        where username = #{hr.username,jdbcType=BIGINT}
    </update>

    <update id="updateHrPassword">
        update hr set password = #{password,jdbcType=VARCHAR}
        where username = #{username,jdbcType=BIGINT}
    </update>

</mapper>